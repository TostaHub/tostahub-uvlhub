# Generated by Selenium IDE
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from core.environment.host import get_host_for_selenium_testing
from core.selenium.common import initialize_driver


class TestTest1():
    def setup_method(self, method):
        self.driver = initialize_driver()
        self.vars = {}
        self.driver.get(get_host_for_selenium_testing())

    def teardown_method(self, method):
        self.driver.quit()

    def test_test1(self):
        self.driver.get("http://127.0.0.1:5000/")
        self.driver.set_window_size(1850, 1053)
        # Esperar que el enlace de "Login" sea clickeable y luego hacer clic
        login_link = WebDriverWait(self.driver, 10).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "Login"))
        )
        login_link.click()

        # Llenar el formulario de login
        email_input = WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.ID, "email"))
        )
        email_input.click()
        email_input.send_keys("user1@example.com")

        password_input = self.driver.find_element(By.ID, "password")
        password_input.click()
        password_input.send_keys("1234")

        submit_button = self.driver.find_element(By.ID, "submit")
        submit_button.click()

        # Esperar y hacer clic en "Description for dataset 3"
        dataset_link = WebDriverWait(self.driver, 30).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "My datasets"))
        )
        dataset_link.click()

        # Navegar en la barra lateral
        sidebar_item = WebDriverWait(self.driver, 30).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, ".sidebar-item:nth-child(6) .align-middle:nth-child(2)"))
        )
        sidebar_item.click()
        # Esperar y hacer clic en "Description for dataset 3"
        dataset_link = WebDriverWait(self.driver, 30).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "My datasets"))
        )
        dataset_link.click()
        # Rellenar el formulario de edici√≥n
        dataset_link = WebDriverWait(self.driver, 30).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "Description for dataset 3"))
        )
        dataset_link.click()
        # Esperar que el enlace de "Login" sea clickeable y luego hacer clic
        login_link = WebDriverWait(self.driver, 10).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "Login"))
        )
        login_link.click()

        # Llenar el formulario de login
        email_input = WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.ID, "email"))
        )
        email_input.click()
        email_input.send_keys("user1@example.com")

        password_input = self.driver.find_element(By.ID, "password")
        password_input.click()
        password_input.send_keys("1234")

        submit_button = self.driver.find_element(By.ID, "submit")
        submit_button.click()
        edit_link = WebDriverWait(self.driver, 30).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "Edit Dataset"))
        )
        edit_link.click()

        publication_type_dropdown = WebDriverWait(self.driver, 30).until(
            EC.element_to_be_clickable((By.ID, "publication_type"))
        )
        publication_type_dropdown.click()

        dropdown_option = WebDriverWait(self.driver, 30).until(
            EC.presence_of_element_located((By.XPATH, "//option[. = 'patent']"))
        )
        dropdown_option.click()

        self.driver.find_element(By.ID, "tags").click()
        self.driver.find_element(By.ID, "tags").send_keys("tag3, tag4,tag50,tag25")

        submit_button = WebDriverWait(self.driver, 30).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, "button"))
        )
        submit_button.click()
